#!/bin/sh
# Copyright (c) 2015 Open-RnD Sp. z o.o.
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use, copy,
# modify, merge, publish, distribute, sublicense, and/or sell copies
# of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

if [ $# -lt 1 ]; then
    echo "Usage:"
    echo "  $(basename $0) <host:port> [recv-port]"
    exit 1
fi

trap 'echo got sigint' SIGINT

RCV_PORT=9999
if [ $# -eq 2 ]; then
    RCV_PORT=$2
fi

HOST=$1

echo "-- starting pipeline ${PIPELINE} at port ${RCV_PORT}"

set -x
GST_DEBUG=4 gst-launch-1.0 udpsrc port=${RCV_PORT} \
         ! 'application/x-rtp,media=(string)video,clock-rate=(int)90000,encoding-name=(string)H264,payload=(int)96' \
         ! rtph264depay \
         ! avdec_h264 \
         ! videoconvert \
         ! xvimagesink &

set +x
pipeline_pid=$!
echo "-- pipeline started as ${pipeline_pid}"

echo "-- starting stream, stream host: ${HOST}"
ID=$(curl -f -X POST http://${HOST}/start?port=${RCV_PORT})
if [ $? -ne 0 -o -z "$ID" ]; then
    echo "-- failed to start stream"
    kill -9 $pipeline_pid 2>/dev/null
    exit 1
fi

echo "-- got ID: $ID"

while true; do
    echo "-- keepalive ping"
    curl -X POST http://${HOST}/alive?id=${ID}
    sleep 30 || break
    echo $?
done

curl -X POST http://${HOST}/stop?id=${ID}

echo "-- stopping pipeline"
kill -9 $pipeline_pid 2>/dev/null


